{"version":3,"file":"app~e4317507.bundle.js","mappings":";yKAaA,QARe,CACb,IAAKA,EAAAA,EACL,QAASA,EAAAA,EACT,UAAWC,EAAAA,EACX,aAAcC,EAAAA,EACd,cAAeC,EAAAA,mCCkBjB,QA5BkB,CAChBC,2BAA0B,WACxB,IAAMC,EAAMC,OAAOC,SAASC,KAAKC,MAAM,GAAGC,cACpCC,EAAaC,KAAKC,aAAaR,GACrC,OAAOO,KAAKE,aAAaH,EAC3B,EAEAI,8BAA6B,WAC3B,IAAMV,EAAMC,OAAOC,SAASC,KAAKC,MAAM,GAAGC,cAC1C,OAAOE,KAAKC,aAAaR,EAC3B,EAEAQ,aAAY,SAACR,GACX,IAAMW,EAAaX,EAAIY,MAAM,KAC7B,MAAO,CACLC,SAAUF,EAAW,IAAM,KAC3BG,GAAIH,EAAW,IAAM,KACrBI,KAAMJ,EAAW,IAAM,KAE3B,EAEAF,aAAY,SAACH,GACX,OAAQA,EAAWO,SAAW,IAAH,OAAOP,EAAWO,UAAa,MACvDP,EAAWQ,GAAK,OAAS,KACzBR,EAAWS,KAAO,IAAH,OAAOT,EAAWS,MAAS,GAC/C,mCCHF,QAtBwB,CACtBC,KAAI,YAA8B,WAA3BC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QACrBF,EAAOG,iBAAiB,SAAS,SAACC,GAChC,EAAKC,cAAcD,EAAOH,EAC5B,IAEAC,EAAQC,iBAAiB,SAAS,SAACC,GACjC,EAAKE,aAAaF,EAAOH,EAC3B,GACF,EAEAI,cAAa,SAACD,EAAOH,GACnBG,EAAMG,kBACNN,EAAOO,UAAUC,OAAO,OAC1B,EAEAH,aAAY,SAACF,EAAOH,GAClBG,EAAMG,kBACNN,EAAOO,UAAUE,OAAO,OAC1B,mSClBF,smNA8CA,QA7C6B,CACrBX,KAAI,YAA2D,sHAGnB,OAHrCY,EAAmB,EAAnBA,oBAAqBC,EAAmB,EAAnBA,oBAAqBC,EAAU,EAAVA,WACrD,EAAKC,qBAAuBH,EAC5B,EAAKI,YAAcF,EACnB,EAAKG,qBAAuBJ,EAAoB,SAE1C,EAAKK,gBAAe,0CALyC,EAMrE,EAEMA,cAAa,WAAG,kHACV,OAAFpB,EAAO,EAAKkB,YAAZlB,GAAE,SAEA,EAAKqB,mBAAmBrB,GAAG,kCACnC,EAAKsB,eAAe,sBAEpB,EAAKC,cAAc,0CAND,EAQtB,EAEMF,mBAAkB,SAACrB,GAAI,kIACF,EAAKmB,qBAAqBK,cAAcxB,GAAG,OAApD,OAAVgB,EAAa,EAAH,yBACPA,GAAU,0CAFQ,EAG7B,EAEAO,YAAW,WAAG,WACZ9B,KAAKwB,qBAAqBQ,WAAYC,EAAAA,EAAAA,MAEnBC,SAASC,cAAc,eAC/BtB,iBAAiB,QAAO,YAAE,8FAC7B,EAAKa,qBAAqBU,cAAc,EAAKX,aAAY,OAC/D,EAAKE,gBAAgB,2CAEzB,EAEAE,aAAY,WAAG,WACb7B,KAAKwB,qBAAqBQ,WAAYK,EAAAA,EAAAA,MAEnBH,SAASC,cAAc,eAC/BtB,iBAAiB,QAAO,YAAE,8FAC7B,EAAKa,qBAAqBY,iBAAiB,EAAKb,YAAYlB,IAAG,OACrE,EAAKoB,gBAAgB,2CAEzB,mSC3CF,m6MAiBA,QAhBgB,eADhB,EACgB,GADhB,EACgB,UAAG,uFACX,kBAAmBY,UAAS,gBAC2B,OAA3DC,QAAQC,IAAI,+CAA+C,0BAIP,OAAhDC,EAAK,IAAIC,EAAAA,GAAsB,kBAAiB,kBAG9CD,EAAGE,WAAU,OACnBJ,QAAQC,IAAI,6BAA6B,kDAEzCD,QAAQC,IAAI,oCAAqC,EAAF,IAAS,yDAb5D,+KAeC,kBAde","sources":["webpack://restaurant-apps/./src/scripts/routes/routes.js","webpack://restaurant-apps/./src/scripts/routes/url-parser.js","webpack://restaurant-apps/./src/scripts/utils/drawer-initiator.js","webpack://restaurant-apps/./src/scripts/utils/like-button-presenter.js","webpack://restaurant-apps/./src/scripts/utils/sw-register.js"],"sourcesContent":["import Home from '../views/pages/home';\r\nimport Recipe from '../views/pages/recipe';\r\nimport Favourite from '../views/pages/favourite';\r\nimport Detail from '../views/pages/detail';\r\n\r\nconst routes = {\r\n  '/': Home, // default page\r\n  '/home': Home,\r\n  '/recipe': Recipe,\r\n  '/favourite': Favourite,\r\n  '/detail/:id': Detail,\r\n};\r\n\r\nexport default routes;\r\n","const UrlParser = {\r\n  parseActiveUrlWithCombiner() {\r\n    const url = window.location.hash.slice(1).toLowerCase();\r\n    const splitedUrl = this._urlSplitter(url);\r\n    return this._urlCombiner(splitedUrl);\r\n  },\r\n\r\n  parseActiveUrlWithoutCombiner() {\r\n    const url = window.location.hash.slice(1).toLowerCase();\r\n    return this._urlSplitter(url);\r\n  },\r\n\r\n  _urlSplitter(url) {\r\n    const urlsSplits = url.split('/');\r\n    return {\r\n      resource: urlsSplits[1] || null,\r\n      id: urlsSplits[2] || null,\r\n      verb: urlsSplits[3] || null,\r\n    };\r\n  },\r\n\r\n  _urlCombiner(splitedUrl) {\r\n    return (splitedUrl.resource ? `/${splitedUrl.resource}` : '/')\r\n    + (splitedUrl.id ? '/:id' : '')\r\n    + (splitedUrl.verb ? `/${splitedUrl.verb}` : '');\r\n  },\r\n};\r\n\r\nexport default UrlParser;\r\n","const DrawerInitiator = {\r\n  init({ button, drawer, content }) {\r\n    button.addEventListener('click', (event) => {\r\n      this._toggleDrawer(event, drawer);\r\n    });\r\n\r\n    content.addEventListener('click', (event) => {\r\n      this._closeDrawer(event, drawer);\r\n    });\r\n  },\r\n\r\n  _toggleDrawer(event, drawer) {\r\n    event.stopPropagation();\r\n    drawer.classList.toggle('open');\r\n  },\r\n\r\n  _closeDrawer(event, drawer) {\r\n    event.stopPropagation();\r\n    drawer.classList.remove('open');\r\n  },\r\n};\r\n\r\nexport default DrawerInitiator;\r\n","import { createLikeMovieButtonTemplate , createUnlikeMovieButtonTemplate  } from '../views/templates/template-restaurant';\r\n\r\nconst LikeButtonPresenter  = {\r\n  async init({ likeButtonContainer, favoriteRestaurants, restaurant }) {\r\n    this._likeButtonContainer = likeButtonContainer;\r\n    this._restaurant = restaurant;\r\n    this._favoriteRestaurants = favoriteRestaurants;\r\n\r\n    await this._renderButton();\r\n  },\r\n\r\n  async _renderButton() {\r\n    const { id } = this._restaurant;\r\n\r\n    if (await this._isRestaurantExist(id)) {\r\n      this._renderLiked();\r\n    } else {\r\n      this._renderLike();\r\n    }\r\n  },\r\n\r\n  async _isRestaurantExist(id) {\r\n    const restaurant = await this._favoriteRestaurants.getRestaurant(id);\r\n    return !!restaurant;\r\n  },\r\n\r\n  _renderLike() {\r\n    this._likeButtonContainer.innerHTML = createLikeMovieButtonTemplate ();\r\n\r\n    const likeButton = document.querySelector('#likeButton');\r\n    likeButton.addEventListener('click', async () => {\r\n      await this._favoriteRestaurants.putRestaurant(this._restaurant);\r\n      this._renderButton();\r\n    });\r\n  },\r\n\r\n  _renderLiked() {\r\n    this._likeButtonContainer.innerHTML = createUnlikeMovieButtonTemplate();\r\n\r\n    const likeButton = document.querySelector('#likeButton');\r\n    likeButton.addEventListener('click', async () => {\r\n      await this._favoriteRestaurants.deleteRestaurant(this._restaurant.id);\r\n      this._renderButton();\r\n    });\r\n  },\r\n};\r\n\r\nexport default LikeButtonPresenter;\r\n","import * as WorkboxWindow from 'workbox-window';\r\n\r\nconst swRegister = async () => {\r\n  if (!('serviceWorker' in navigator)) {\r\n    console.log('Service Worker not supported in the browser');\r\n    return;\r\n  }\r\n\r\n  const wb = new WorkboxWindow.Workbox('./sw.bundle.js');\r\n\r\n  try {\r\n    await wb.register();\r\n    console.log('Service worker registered');\r\n  } catch (error) {\r\n    console.log('Failed to register service worker', error);\r\n  }\r\n};\r\n\r\nexport default swRegister;\r\n"],"names":["Home","Recipe","Favourite","Detail","parseActiveUrlWithCombiner","url","window","location","hash","slice","toLowerCase","splitedUrl","this","_urlSplitter","_urlCombiner","parseActiveUrlWithoutCombiner","urlsSplits","split","resource","id","verb","init","button","drawer","content","addEventListener","event","_toggleDrawer","_closeDrawer","stopPropagation","classList","toggle","remove","likeButtonContainer","favoriteRestaurants","restaurant","_likeButtonContainer","_restaurant","_favoriteRestaurants","_renderButton","_isRestaurantExist","_renderLiked","_renderLike","getRestaurant","innerHTML","createLikeMovieButtonTemplate","document","querySelector","putRestaurant","createUnlikeMovieButtonTemplate","deleteRestaurant","navigator","console","log","wb","WorkboxWindow","register"],"sourceRoot":""}